<h3>UserRolesModal</h3>

@if (ShowModal)
{
    <div class="flex flex-col max-w-md gap-2 p-6 rounded-md shadow-md dark:bg-gray-50 dark:text-gray-800">
        <h2 class="flex items-center gap-2 text-xl font-semibold leading-tight tracking-wide">
              Change Roles for @UserName
        </h2>
        <p class="flex-1 dark:text-gray-600">
            <QuickGrid Items="roles.AsQueryable()" >
                <PropertyColumn Property="@(role => role)" Title="Role"></PropertyColumn>
                <TemplateColumn>
                    <button class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded inline-flex items-center" @onclick="()=>RemoveRole(context)">
                        <svg class="h-8 w-8 text-red-500" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <line x1="18" y1="6" x2="6" y2="18" />  <line x1="6" y1="6" x2="18" y2="18" /></svg>
                    </button>
                </TemplateColumn>
            </QuickGrid>
        </p>
        <div class="mt-2">
            <input type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm dark:bg-gray-100 dark:text-gray-800" placeholder="Add new role" @bind="newRole" />
            <button class="px-6 py-2 rounded-sm shadow-sm dark:bg-sky-600 dark:text-gray-50" @onclick="AddRole">Add Role</button>
        </div>
        <div class="flex flex-col justify-end gap-3 mt-6 sm:flex-row">
            <button class="px-6 py-2 rounded-sm shadow-sm dark:bg-sky-600 dark:text-gray-50" @onclick="CloseModal">Close</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public bool ShowModal { get; set; }
    [Parameter]
    public EventCallback<bool> ModalClosed { get; set; }
    [Parameter]
    public required string UserId { get; set; }
    [Parameter]
    public string? UserName { get; set; }

    private List<string> roles = [];
    private string newRole = "";

    protected override async Task OnInitializedAsync()
    {
      
        if (ShowModal)

        {
            roles = new List<string> { "Admin", "User" };
        }
    }

    private async Task AddRole()
    {
        if (!string.IsNullOrEmpty(newRole))
        {
            roles.Add(newRole);
            newRole = "";
        }
    }

    async Task RemoveRole(string role)
    {
        roles.Remove(role);
    }

    void CloseModal()
    {
        ShowModal = false;
        ModalClosed.InvokeAsync(ShowModal);
    }
}
