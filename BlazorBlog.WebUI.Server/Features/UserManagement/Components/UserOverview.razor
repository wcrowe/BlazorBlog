@page "/user-overview"


@inject ISender Sender
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Users Overview</PageTitle>

<h2 class="text-3xl font-extrabold px-4 py-4 my-4 text-gray-900 dark:text-gray-100 bg-gray-100 dark:bg-gray-800 rounded-lg">User Overview</h2>


@if (users is null)
{
    <span><em>Loading...</em></span>
}
else if (users.Count == 0)
{
    <span><em>No users found</em></span>
}else{
   <QuickGrid Items="users.AsQueryable()">

        <PropertyColumn Property="@(prop=>prop.UserName)" Sortable="true" Title="User Name" ></PropertyColumn>
        <PropertyColumn Property="@(prop=>prop.Email)" Sortable="true" Title="Email"></PropertyColumn>
        <PropertyColumn Property="@(prop=>prop.Roles)" Sortable="false" Title="Email"></PropertyColumn>

    </QuickGrid>

}


@code {
    private List<UserResponse> users = [];

    protected override async Task OnInitializedAsync()
    {
        var result = await Sender.Send(new GetUsersQuery());
        if (result.Success)
        {
            users = result!;
        }else
        {
            users = [];
        }
    }
}
