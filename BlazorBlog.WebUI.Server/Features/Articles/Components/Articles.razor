@page "/"
@inject ISender Sender
@attribute [StreamRendering]

<PageTitle>Articles</PageTitle>
<div class="space-y-6">
    <h2 class="text-3xl font-extrabold px-4 py-4 my-4 text-gray-900 dark:text-gray-100 bg-gray-100 dark:bg-gray-800 rounded-lg">Articles</h2>

    <div class="space-y-6">
        @if (articles is null)
        {
            <p><em>Loading...</em></p>
        }
        else if (articles.Count == 0)
        {
            <p><em>No articles found</em></p>
        }
        else
        {
            <AuthorizeView>
                <a href="/article-editor" class="block w-42 px-4 py-4 my-4 border rounded-md border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors">Create new article</a>
            </AuthorizeView>
            <ul class="space-y-8 xl:space-y-10">
                @foreach (var article in articles)
                {
                    <li>
                        <article>
                            <dl>
                                <dt class="sr-only">Published by</dt>
                                <dd class="text-xs dark\:text-gray-100">
                                    <h3>@article.UserName</h3>
                                </dd>
                            </dl>
                            <dl>
                                <dt class="sr-only">Published on</dt>
                                <dd class="text-xs dark:text-gray-600">
                                    <time datetime="@article.DatePublished.ToString("yyyy-MM-dd")">@article.DatePublished.ToString("MMMM dd, yyyy")</time>
                                </dd>
                            </dl>
                            <div class="space-y-1">
                                <h3 class="text-2xl font-bold tracking-tight">
                                    <a rel="noopener noreferrer" href="#" class="dark:text-gray-600">@article.Title</a>
                                </h3>
                                <p class="max-w-full dark:text-gray-800 prose prose-invert">@article.Content</p>
                                <div class="flex flex-wrap space-x-3">
                                    <AuthorizeView>
                                        <Authorized>
                                            <a href="/article-editor/@article.Id"
                                               class="inline-flex items-center justify-center px-4 py-2 border border-sky-600 text-sky-600 dark:text-sky-600 rounded-md text-sm font-semibold transition hover:bg-sky-600 hover:text-white dark:hover:bg-sky-500 dark:hover:border-sky-500">
                                                Edit Article @article.Id
                                            </a>
                                          </Authorized>
                                    </AuthorizeView>
                                    @* Optional: Add hashtag links if your ArticleResponse model supports tags *@
 @*                                    @if (article.Tags?.Any() == true)
                                    {
                                        foreach (var tag in article.Tags)
                                        {
                                            <a rel="noopener noreferrer" href="#" class="text-xs dark:text-sky-600">#@tag</a>
                                        }
                                    } *@
                                </div>
                            </div>
                        </article>
                    </li>
                }
            </ul>
        }
    </div>
</div>

@code {
    private List<ArticleResponse>? articles = new();

    protected override async Task OnInitializedAsync()
    {
        var result = await Sender.Send(new GetArticlesQuery());
        if (result.Success)
            articles = result;
        else
            articles = new();
    }


}