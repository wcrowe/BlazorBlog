@page "/"

@inject ISender Sender
@attribute [StreamRendering]


<PageTitle>Articles</PageTitle>
<div class="space-y-6">
    <h2 class="text-3xl font-extrabold text-grey-50">Articles</h2>


    <a href="/article-editor" class="btn btn-primary">Create new article</a>

    @if (articles is null)
    {
        <p><em>Loading...</em></p>
    }
    else if (articles.Count == 0)
    {
        <p><em>No articles found</em></p>
    }
    else
    {
        <ul class="space-y-8 xl:space-y-10">
            @foreach (var article in articles)
            {
                <li>
                    <article>
                        <dl>
                            <dt class="sr-only">Published on</dt>
                            <dd class="text-xs text-gray-600">
                                <time>@article.DatePublished</time>
                            </dd>
                        </dl>
                        <div class="space-y-1">
                            <h3 class="text-2xl font-bold tracking-tight">
                                <a rel="noopener noreferrer" href="#" class="text-gray-900">@article.Title</a>
                            </h3>
                            <p class="max-w-full text-gray-800 prose prose-invert">@article.Content</p>
                            <div class="flex flex-wrap space-x-3">
                                <a href="/article-editor/@article.Id" class="text-xs text-default-600">Edit article @article.Id</a>
                            </div>
                        </div>
                    </article>
                </li>


                  
            }
        </ul>



    }


</div>
@code {
    private List<ArticleReponse>? articles = new();

    protected override async Task OnInitializedAsync()
    {

        var result = await Sender.Send(new GetArticlesQuery());
        if (result.Success)
            articles = result;
        else
            articles = new();

    }

    }
